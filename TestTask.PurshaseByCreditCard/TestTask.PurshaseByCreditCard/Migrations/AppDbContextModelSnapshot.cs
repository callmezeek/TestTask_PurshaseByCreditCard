// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TestTask.PurshaseByCreditCard.Models;
using TestTask.PurshaseByCreditCard.Store;

namespace TestTask.PurshaseByCreditCard.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestTask.PurshaseByCreditCard.Models.CreditCard", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cardholder")
                        .IsRequired();

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<byte>("ExpDateMonth");

                    b.Property<short>("ExpDateYear");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("TestTask.PurshaseByCreditCard.Models.Purshase", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid?>("CreditCardId")
                        .IsRequired();

                    b.Property<int>("Currency");

                    b.Property<int>("Number");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CreateTime");

                    b.HasIndex("CreditCardId");

                    b.ToTable("Purshase");
                });

            modelBuilder.Entity("TestTask.PurshaseByCreditCard.Models.Purshase", b =>
                {
                    b.HasOne("TestTask.PurshaseByCreditCard.Models.CreditCard", "CreditCard")
                        .WithMany()
                        .HasForeignKey("CreditCardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
